##题目描述：
    题目描述设有 n 个正整数 
    ，将它们联接成一排，相邻数字首尾相接，组成一个最大的整数。

输入格式
    第一行有一个整数，表示数字个数 n。

    第二行有 n 个整数，表示给出的 n 个整数。

输出格式
    一个正整数，表示最大的整数

##题目链接
    https://www.luogu.com.cn/problem/P1012

##思路
    在位数相同的情况下，一个数的大小应先从最高位比起
        8和71的情况下应该让8位于71前
        此时，我们定义8>71
    1.由上可知，我们将所有数排序，大在前，小在后，然后依次输出便可得到最大的拼数
        因此，图方便我们采用字符串的形式输入输出，采用冒泡进行排序
    2.但是上述比较是非常粗略的，如88和85谁大呢，81，89，8谁大呢？
        在1排序后，我们还需进行一次更精细的排序：
        （1）若两字符串首位相同，则不断比较下一位，直到比出大小或一方字符串用尽为止
        （2）若一未比出大小，则（eg，89与8，因为9>8,所以898更大，而81与8，1<8，881更大）
            （8889与88，89大于88，所以888988更大）
            进行循环再比较


##code
    #include <stdio.h>
    #include <stdlib.h>
    #include <math.h>
    #include <string.h>
    char **c;
    int n;
    void swaps(int i,int j){
        char *tem=c[i];
        c[i]=c[j];
        c[j]=tem;
    }
    int min(int a,int b){
        if(a<b)return a;
        else return b;
    }
    void deepsort(int i){
        int len1=strlen(c[i]);
        int len2=strlen(c[i+1]);
        int t=min(len1,len2);
        for(int k=0;k<t;k++){
            if(c[i][k]!=c[i+1][k]){
                if(c[i][k]<c[i+1][k]){
                    swaps(i,i+1);
                }
                return;
            }
        }
        if(len1!=len2){
            if(len1>len2){
                int r=0;
                while(c[i][len2+r]==c[i+1][0+r] && r<len2){
                    r++;
                }
                if(c[i][len2]<c[i+1][0] && r<len2)swaps(i,i+1);
            }else if(len1<len2){
                int r=0;
                while(c[i][0+r]==c[i+1][len1+r] && r<len1){
                    r++;
                }
                if(c[i+1][len1+r]>c[i][0+r] && r<len1)swaps(i,i+1);
            }
        }
    }
    void deepCheck(){
        int cnt=0;
        for(int i=0;i<n-1;i++){
            for(int j=0;j<n-1-i;j++)
            if(c[j][0]==c[j+1][0])deepsort(j);
        }
    }

    void isBig(){
        for(int i=0;i<n;i++){
            int max=i;
            for(int j=i+1;j<n;j++){
                if(c[j][0]>c[max][0])max=j;
            }
            swaps(i,max);
        }
    }
    int main(){
        scanf("%d",&n);
        char** tem=(char**)malloc(20*sizeof(char*));
        c=tem;
        for(int i=0;i<n;i++){
            char *tem=(char*)malloc(100);
            c[i]=tem;
            scanf("%s",c[i]);
        }
        isBig();
        deepCheck();
        for(int i=0;i<n;i++)printf("%s",c[i]);

        return 0;
    }


##题后反思
    1.关于更精细的比较其实有点小问题（eg.888889和88）
    因为只比较了（第一次88和88）（第二次88和88）而未比较（第三次89和88）
    导致的可能出错，应将“一次比较”变为循环
